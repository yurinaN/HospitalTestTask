// <auto-generated />
using System;
using Hopital.DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hopital.DataLayer.Migrations
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20221022074457_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hopital.DataLayer.Entities.Cabinet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("number");

                    b.HasKey("Id")
                        .HasName("pk_cabinets");

                    b.ToTable("cabinets", (string)null);
                });

            modelBuilder.Entity("Hopital.DataLayer.Entities.HealthLocality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("number");

                    b.HasKey("Id")
                        .HasName("pk_health_localities");

                    b.ToTable("health_localities", (string)null);
                });

            modelBuilder.Entity("Hopital.DataLayer.Entities.LocalDoctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("CabinetId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cabinet_id");

                    b.Property<Guid?>("HealthLocalityId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("health_locality_id");

                    b.Property<Guid>("SpecializationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("specialization_id");

                    b.HasKey("Id")
                        .HasName("pk_local_doctors");

                    b.HasIndex("CabinetId")
                        .HasDatabaseName("ix_local_doctors_cabinet_id");

                    b.HasIndex("HealthLocalityId")
                        .HasDatabaseName("ix_local_doctors_health_locality_id");

                    b.HasIndex("SpecializationId")
                        .HasDatabaseName("ix_local_doctors_specialization_id");

                    b.ToTable("local_doctors", (string)null);
                });

            modelBuilder.Entity("Hopital.DataLayer.Entities.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2")
                        .HasColumnName("birthday");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<Guid>("HealthLocalityId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("health_locality_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("patronymic");

                    b.Property<string>("Surmane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("surmane");

                    b.HasKey("Id")
                        .HasName("pk_patients");

                    b.HasIndex("HealthLocalityId")
                        .HasDatabaseName("ix_patients_health_locality_id");

                    b.ToTable("patients", (string)null);
                });

            modelBuilder.Entity("Hopital.DataLayer.Entities.Specialization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_specializations");

                    b.ToTable("specializations", (string)null);
                });

            modelBuilder.Entity("Hopital.DataLayer.Entities.LocalDoctor", b =>
                {
                    b.HasOne("Hopital.DataLayer.Entities.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabinetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_local_doctors_cabinets_cabinet_id");

                    b.HasOne("Hopital.DataLayer.Entities.HealthLocality", "HealthLocality")
                        .WithMany()
                        .HasForeignKey("HealthLocalityId")
                        .HasConstraintName("fk_local_doctors_health_localities_health_locality_id");

                    b.HasOne("Hopital.DataLayer.Entities.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_local_doctors_specializations_specialization_id");

                    b.Navigation("Cabinet");

                    b.Navigation("HealthLocality");

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("Hopital.DataLayer.Entities.Patient", b =>
                {
                    b.HasOne("Hopital.DataLayer.Entities.HealthLocality", "HealthLocality")
                        .WithMany()
                        .HasForeignKey("HealthLocalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_patients_health_localities_health_locality_id");

                    b.Navigation("HealthLocality");
                });
#pragma warning restore 612, 618
        }
    }
}
